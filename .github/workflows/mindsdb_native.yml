name: MindsDB Native workflow

on:
  push:
  pull_request:
    branches:
      - stable
      - staging
      
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.6,3.7,3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --no-cache-dir .
        pip install -r optional_requirements_extra_data_sources.txt
    - name: Install lightwood/staging if it's not mindsdb_native/stable
      if: github.ref != 'refs/heads/stable'
      run: |
          pip install git+https://github.com/mindsdb/lightwood.git@staging --upgrade --no-cache-dir
    - name: Run unit tests
      run: |
          cd tests
          python -m unittest discover unit_tests
          cd ..
      shell: bash
    - name: Run integration tests
      if: toJson(secrets.DATABASE_CREDENTIALS) != '{}'
      run: |
          cd tests
          python -m unittest discover integration_tests
          cd ..
      shell: bash
      env:
        CHECK_FOR_UPDATES: False

        CLICKHOUSE_USER: ${{ fromJson(secrets.DATABASE_CREDENTIALS).clickhouse.user }}
        CLICKHOUSE_PORT: ${{ fromJson(secrets.DATABASE_CREDENTIALS).clickhouse.port }}
        CLICKHOUSE_PASSWORD: ${{ fromJson(secrets.DATABASE_CREDENTIALS).clickhouse.password }}
        CLICKHOUSE_HOST: ${{ fromJson(secrets.DATABASE_CREDENTIALS).clickhouse.host }}

        MARIADB_USER: ${{ fromJson(secrets.DATABASE_CREDENTIALS).mariadb.user }}
        MARIADB_PORT: ${{ fromJson(secrets.DATABASE_CREDENTIALS).mariadb.port }}
        MARIADB_PASSWORD: ${{ fromJson(secrets.DATABASE_CREDENTIALS).mariadb.password }}
        MARIADB_HOST: ${{ fromJson(secrets.DATABASE_CREDENTIALS).mariadb.host }}
        MARIADB_DATABASE: ${{ fromJson(secrets.DATABASE_CREDENTIALS).mariadb.database }}

        MYSQL_USER: ${{ fromJson(secrets.DATABASE_CREDENTIALS).mysql.user }}
        MYSQL_PORT: ${{ fromJson(secrets.DATABASE_CREDENTIALS).mysql.port }}
        MYSQL_PASSWORD: ${{ fromJson(secrets.DATABASE_CREDENTIALS).mysql.password }}
        MYSQL_HOST: ${{ fromJson(secrets.DATABASE_CREDENTIALS).mysql.host }}
        MYSQL_DATABASE: ${{ fromJson(secrets.DATABASE_CREDENTIALS).mysql.database }}

        POSTGRES_USER: ${{ fromJson(secrets.DATABASE_CREDENTIALS).postgres.user }}
        POSTGRES_PORT: ${{ fromJson(secrets.DATABASE_CREDENTIALS).postgres.port }}
        POSTGRES_PASSWORD: ${{ fromJson(secrets.DATABASE_CREDENTIALS).postgres.password }}
        POSTGRES_HOST: ${{ fromJson(secrets.DATABASE_CREDENTIALS).postgres.host }}
        POSTGRES_DATABASE: ${{ fromJson(secrets.DATABASE_CREDENTIALS).postgres.database }}

        MONGODB_USER: ${{ fromJson(secrets.DATABASE_CREDENTIALS).mongodb.user }}
        MONGODB_PORT: ${{ fromJson(secrets.DATABASE_CREDENTIALS).mongodb.port }}
        MONGODB_PASSWORD: ${{ fromJson(secrets.DATABASE_CREDENTIALS).mongodb.password }}
        MONGODB_HOST:  ${{ fromJson(secrets.DATABASE_CREDENTIALS).mongodb.host }}

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/stable'
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build and publish
      env:
        TWINE_USERNAME:  __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist
        twine upload dist/*
