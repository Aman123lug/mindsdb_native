language: python

matrix:
  include:
    - name: "Python 3.7 on Ubuntu 16.0.4"
      os: linux
      python: 3.7
      node: 11.15.0
      dist: xenial
      sudo: true
      env:
        DEPLOYMENT_ENV="true"
        BADGE=linux
      services: docker

    - name: "Python 3.6 on Ubuntu 16.0.4"
      os: linux
      python: 3.6
      node: 11.15.0
      dist: xenial

    - name: "Python 3.8 on Ubuntu 16.0.4"
      os: linux
      python: 3.8
      node: 11.15.0
      dist: xenial

    - name: "Python 3.7.2 on OSX"
      os: osx
      language: shell
      dist: xcode12
      env:
        BADGE=osx

    - name: "Python 3.7.3 on Windows"
      os: windows           # Windows 10.0.17134 N/A Build 17134
      language: shell       # 'language: python' is an error on Travis CI Windows
      before_install:
        - choco install python --version=3.7.3
        - python -m pip install --upgrade pip
      env:
        PATH=/c/Python37:/c/Python37/Scripts:$PATH
        BADGE=windows


notifications:
  # send notifications only on stable failure
  email:
    only: stable
cache: pip
# install dependencies
install:
  - if [ "$TRAVIS_OS_NAME" != "windows" ]; then travis_wait 15 pip3 install --upgrade pip; fi
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then travis_wait 15 pip install --no-cache-dir -e .; fi
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then travis_wait 15 pip install --no-cache-dir -r requirements_test.txt; fi
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then travis_wait 15 pip install --no-cache-dir -r optional_requirements_extra_data_sources.txt; fi
  - if [ "$TRAVIS_OS_NAME" = "windows" && "$TRAVIS_BRANCH" != "stable" ]; then travis_wait 15 pip install git+https://github.com/mindsdb/lightwood.git@staging --upgrade --no-cache-dir; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then travis_wait 15 pip3 install --user --no-cache-dir -e .; sleep 10s; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then travis_wait 15 pip3 install --user --no-cache-dir -r requirements_test.txt; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then travis_wait 15 pip3 install --user --no-cache-dir -r optional_requirements_extra_data_sources.txt; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then travis_wait 15 pip3 install --no-cache-dir -e .; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then travis_wait 15 pip3 install --no-cache-dir -r requirements_test.txt; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then travis_wait 15 pip3 install --no-cache-dir -r optional_requirements_extra_data_sources.txt; fi
  - if [ "$TRAVIS_OS_NAME" != "windows" && "$TRAVIS_BRANCH" != "stable" ]; then travis_wait 15 pip3 install git+https://github.com/mindsdb/lightwood.git@staging --upgrade --no-cache-dir; fi

# run tests
before_script:
  # Travis doesn't support docker on OSX and it doesn't work on Windows too
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then travis_wait 20  docker-compose up -d; fi
script:
  # Unit tests
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then travis_wait 15 python3 - m pytest --run-slow --durations=20 tests/unit_tests; fi
  - if [ "$TRAVIS_OS_NAME" != "osx" ]; then travis_wait 15 pytest --run-slow --durations=20 tests/unit_tests; fi
  # Integration tests, require docker so only run on linux
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then travis_wait 15 pytest --run-integration tests/integration_tests ; fi
  - pip install flake8
  - flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
after_script:
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then  docker-compose down; fi

# deploy to pip and github pages
deploy:
  - provider: pypi
    user: "mindsdb_sysadmin"
    password: $PYPI_SYSADMIN_PASSWORD
    distributions: "sdist"
    on:
      branch: stable
      condition: $DEPLOYMENT_ENV = "true"

# after pip is deployed, we can deploy to dockerhub
after_deploy:
  -  if [[ "$DEPLOYMENT_ENV" = "true" && "$TRAVIS_BRANCH" = "stable" ]]; then sleep 15; fi
  -  if [[ "$DEPLOYMENT_ENV" = "true" && "$TRAVIS_BRANCH" = "stable" ]]; then cd distributions/docker; fi
  -  if [[ "$DEPLOYMENT_ENV" = "true" && "$TRAVIS_BRANCH" = "stable" ]]; then docker build -t docker-build .; fi
  -  if [[ "$DEPLOYMENT_ENV" = "true" && "$TRAVIS_BRANCH" = "stable" ]]; then docker tag docker-build $REGISTRY_USER/mindsdb:latest; fi
  -  if [[ "$DEPLOYMENT_ENV" = "true" && "$TRAVIS_BRANCH" = "stable" ]]; then cd ../..; fi
  -  if [[ "$DEPLOYMENT_ENV" = "true" && "$TRAVIS_BRANCH" = "stable" ]]; then docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASS" && docker push $REGISTRY_USER/mindsdb && docker logout; fi
